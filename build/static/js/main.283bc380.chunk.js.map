{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["getEvents","cats","arr","i","j","events","push","console","log","getTotalreg","uevents","curevent","a","event","teamMembers","length","App","id","useState","email","setEmail","err","setErr","backendURI","pass","setPass","rpass","setRPass","username","setUsername","user","setUser","page","setPage","categories","setCategories","userEvents","setuserEvents","currevent","setcurrevent","useEffect","museer","localStorage","getItem","JSON","parse","fetch","then","response","ok","json","alert","token","method","headers","Authorization","className","onClick","removeItem","onSubmit","preventDefault","body","stringify","res","data","statusCode","user1","jwt","setItem","htmlFor","type","name","onChange","e","target","value","messages","message","map","val","idx","class","style","padding","display","alignItems","justifyContent","flexDirection","find","ev","status","val1","idx1","flexWrap","marginTop","textDecoration","ragamID","collegeName","phoneNumber","metaValues","val2","submissions","overflow","textOverflow","href","slice","url","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.283bc380.chunk.js","sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from 'react';\n\nfunction getEvents(cats) {\n  let arr = [];\n  for (let i in cats)\n    for (let j in cats[i].events)\n      arr.push(cats[i].events[j])\n\n  console.log(arr)\n  return arr;\n}\n\nfunction getEventName(events, id) {\n  return events.find((ev) => ev.id === id).name;\n}\n\nfunction getTotalreg(uevents, curevent) {\n  let a = 0;\n  for (let i in uevents) {\n    if (uevents[i].event === curevent && uevents[i].teamMembers.length)\n      a = a + 1;\n  }\n  return a;\n\n}\n\nfunction App() {\n  const [email, setEmail] = useState(\"\");\n  const [err, setErr] = useState(\"\");\n  const backendURI = \"https://api.ragam.live/\";\n  const [pass, setPass] = useState(\"\");\n  const [rpass, setRPass] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [user, setUser] = useState({});\n  const [page, setPage] = useState(\"login\");\n  const [categories, setCategories] = useState({});\n  const [userEvents, setuserEvents] = useState([]);\n  const [currevent, setcurrevent] = useState(\"\");\n\n  useEffect(() => {\n    let museer = localStorage.getItem(\"user\");\n    museer = JSON.parse(museer);\n\n    if (museer) {\n      setPage(\"events\");\n      setUser(museer);\n    }\n\n    fetch(backendURI + \"categories\")\n      .then((response) => {\n        if (response.ok) return response.json();\n        else alert(\"Some error Occurred. Please try again later.\")\n      })\n      .then((json) => {\n        console.log(json);\n        setCategories(json);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (user.token) {\n      fetch(backendURI + \"user-event-details\", {\n        method: \"GET\",\n        headers: {\n          Authorization: \"Bearer \" + user.token,\n        },\n      })\n        .then((response) => {\n          if (response.ok) return response.json();\n          else alert(\"Some error Occurred.Contact Technical Team.\")\n        })\n        .then((json) => {\n          console.log(json);\n          setuserEvents(json);\n        });\n    }\n  }, [user.token]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"App-header-left\">\n          {(page === \"login\") && <h4 className=\"page-heading\">Login</h4>}\n          {(page === \"events\") && <h4 className=\"page-heading\">Events</h4>}\n          {(page === \"insideevent\") && <h4 className=\"page-heading\">Event Details</h4>}\n          <div className=\"heading-extra\">{user.email}</div>\n        </div>\n        {user.token &&\n          <button onClick={() => { localStorage.removeItem(\"user\"); setUser({}) }}>Logout</button>}\n      </header>\n      <div>\n        {(page === \"login\") &&\n          <div className=\"login-page\">\n            <h4 className=\"page-heading\">Login</h4>\n            <form className=\"form\" onSubmit={(event) => {\n              event.preventDefault();\n              fetch(backendURI + \"auth/local\", {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ \"identifier\": email, \"password\": pass })\n              }).then((res) => { res.json().then(data => { if (data.statusCode) setErr(\"Username or Password invalid\"); else { let user1 = data.user; user1.token = data.jwt; localStorage.setItem(\"user\", JSON.stringify(user1)); setUser(user1); setPage(\"events\") } }) }, (err) => { console.log(err) });\n            }}>\n              <div className=\"field\">\n                <label htmlFor=\"email\">Email:</label>\n                <input type=\"text\" id=\"email\" name=\"email\" onChange={(e) => { setEmail(e.target.value) }} />\n              </div>\n              <div className=\"field\">\n                <label htmlFor=\"pass\">Password:</label>\n                <input type=\"password\" id=\"pass\" name=\"pass\" onChange={(e) => { setPass(e.target.value) }} />\n              </div>\n              {err !== \"\" && <h4>{err}</h4>}\n              <input type=\"submit\" value=\"Login\" />\n              {/* <button onClick={() => { setPage(\"register\") }}>Register</button> */}\n            </form>\n          </div>\n        }\n        {(page === \"register\" && !user.token) && <div><h4>Register</h4>\n          <label htmlFor=\"email\">Email:</label>\n          <input type=\"text\" id=\"email\" name=\"email\" onChange={(e) => { setEmail(e.target.value) }} />\n          <label htmlFor=\"email\">Username:</label>\n          <input type=\"text\" id=\"username\" name=\"username\" onChange={(e) => { setUsername(e.target.value) }} />\n          <label htmlFor=\"pass\">Password:</label>\n          <input type=\"password\" id=\"pass\" name=\"pass\" onChange={(e) => { setPass(e.target.value) }} />\n          <label htmlFor=\"pass\">Repeat Password:</label>\n          <input type=\"password\" id=\"rpass\" name=\"rpass\" onChange={(e) => { setRPass(e.target.value) }} />\n          <h4>{err}</h4>\n          <input type=\"button\" value=\"Submit\" onClick={() => {\n            if (pass === rpass)\n              fetch(backendURI + \"auth/local/register\", {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ \"username\": username, \"email\": email, \"password\": pass })\n              }).then((res) => { res.json().then(data => { if (data.statusCode) setErr(data?.data[0]?.messages[0]?.message); else setErr(\"Registered succcessfully. PLease login.\") }) }, (err) => { console.log(err) });\n            else setErr(\"password doesn't match\")\n          }} />\n          <button onClick={() => { setPage(\"login\") }}>Login</button>\n        </div>}\n        {(user.token && page === \"events\") &&\n          <div>\n            {/* <h4> Logged in as {user.email}</h4> */}\n            <div className=\"events-page\">\n              {/* <h4 className=\"page-heading\">Events</h4> */}\n              {categories.length &&\n                <div className=\"events-list\">\n                  {getEvents(categories).map((val, idx) => {\n                    return <div key={val.name} className=\"events-list-item\" onClick={() => { setcurrevent(val.id); setPage(\"insideevent\"); console.log(\"eventId\", val.id) }}>\n                      {val.name}\n                    </div>\n                  })}\n                </div>}\n            </div>\n          </div>}\n        {(user.token && page === \"insideevent\") &&\n          <div class=\"event-details-page\">\n            <div style={{ padding: \"0 1rem\", display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\" }}>\n              <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                <h4 className=\"page-sub-heading\">{getEventName(getEvents(categories), currevent)}</h4>\n                {<div className=\"heading-extra\">Total Registrations: {getTotalreg(userEvents, currevent)} </div>}\n              </div>\n              <button onClick={() => { setPage(\"events\") }}>Back to events</button>\n            </div>\n            <div className=\"event-reg-list\">\n              {userEvents.map((val, idx) => {\n                if (val.event === currevent && val.teamMembers.length)\n                  return (\n                    <div key={val.id} className=\"event-reg-list-item\">\n                      <div class=\"event-reg-detail\">\n                        <label className=\"event-reg-label\">Ref No.</label>\n                        <div>{val.id}</div>\n                      </div>\n                      <div class=\"event-reg-detail\">\n                        <label className=\"event-reg-label\">Status</label>\n                        <div>{val.status}</div>\n                      </div>\n                      <div class=\"event-reg-detail\">\n                        <label className=\"event-reg-label\">Team Members</label>\n                        <div>\n                          {val.teamMembers.map((val1, idx1) => {\n                            return (<div style={{ display: \"flex\", flexDirection: \"column\", flexWrap: \"wrap\", marginTop: \"10px\" }}>\n                              <div style={{ textDecoration: \"underline\" }}>{val1.ragamID}</div>\n                              <div >{val1.name}</div>\n                              <div >{val1.collegeName}</div>\n                              <div >{val1.phoneNumber}</div>\n                              <div >{val1.email}</div>\n                            </div>)\n                          })}\n                        </div>\n                      </div>\n                      {val.metaValues &&\n                        <div class=\"event-reg-detail\">\n                          <label className=\"event-reg-label\">Metavalues</label>\n                          {val.metaValues?.map((val2, idx) => {\n                            return (<div>\n                              {val2}\n                            </div>)\n                          })}\n                        </div>}\n\n                      <div class=\"event-reg-detail\">\n                        <label className=\"event-reg-label\">Submissions</label>\n                        {val.submissions.length ? val.submissions.map((val, idx) => {\n                          return (\n                            <a style={{\n                              overflow: \"hidden\",\n                              textOverflow: \"ellipsis\"\n                            }} href={backendURI.slice(0, -1) + val.url}>\n                              {val.name}\n                            </a>\n                          )\n                        }) : <div>No submissions by this team</div>}\n                      </div>\n                    </div>)\n              })}\n            </div>\n          </div>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}