{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["getEvents","cats","arr","i","j","events","push","console","log","getTotalreg","uevents","curevent","a","event","teamMembers","length","App","useState","email","setEmail","err","setErr","backendURI","pass","setPass","rpass","setRPass","username","setUsername","user","setUser","page","setPage","categories","setCategories","userEvents","setuserEvents","currevent","setcurrevent","currUserEventId","useEffect","museer","localStorage","getItem","JSON","parse","fetch","then","response","ok","json","alert","token","method","headers","Authorization","className","onClick","removeItem","style","display","flexDirection","for","type","id","name","onChange","e","target","value","body","stringify","res","data","statusCode","user1","jwt","setItem","messages","message","margin","map","val","idx","alignItems","backgroundColor","marginTop","justifyContent","height","overflowY","border","padding","status","val1","idx1","flexWrap","collegeName","ragamID","phoneNumber","metaValues","val2","submissions","overflow","textOverflow","href","slice","url","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4eeaeb9c.chunk.js","sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from 'react';\n\nfunction getEvents(cats) {\n  let arr = [];\n  for (let i in cats)\n    for (let j in cats[i].events)\n      arr.push(cats[i].events[j])\n\n  console.log(arr)\n  return arr;\n}\nfunction getTotalreg(uevents, curevent) {\n  let a = 0;\n  for (let i in uevents) {\n    if (uevents[i].event == curevent && uevents[i].teamMembers.length)\n      a = a + 1;\n  }\n  return a;\n\n}\n\nfunction App() {\n  const [email, setEmail] = useState(\"\");\n  const [err, setErr] = useState(\"\");\n  const backendURI = \"https://api.ragam.live/\";\n  const [pass, setPass] = useState(\"\");\n  const [rpass, setRPass] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [user, setUser] = useState({});\n  const [page, setPage] = useState(\"login\");\n  const [categories, setCategories] = useState({});\n  const [userEvents, setuserEvents] = useState([]);\n  const [currevent, setcurrevent] = useState(\"\");\n  const [currUserEventId, setcurrUserEventId] = useState(\"\");\n\n  useEffect(() => {\n    let museer = localStorage.getItem(\"user\");\n    museer = JSON.parse(museer);\n\n    if (museer) {\n\n      setPage(\"events\");\n      setUser(museer);\n    }\n\n    fetch(backendURI + \"categories\")\n      .then((response) => {\n        if (response.ok) return response.json();\n        else alert(\"Some error Occurred. Please try again later.\")\n      })\n      .then((json) => {\n        console.log(json);\n        setCategories(json);\n      });\n  }, [])\n  useEffect(() => {\n    if (user.token) {\n      fetch(backendURI + \"user-event-details\", {\n        method: \"GET\",\n        headers: {\n          Authorization: \"Bearer \" + user.token,\n        },\n      })\n        .then((response) => {\n          if (response.ok) return response.json();\n          else alert(\"Some error Occurred.Contact Technical Team.\")\n        })\n        .then((json) => {\n          console.log(json);\n          setuserEvents(json);\n        });\n    }\n  }, [user.token])\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h4>Ragam Admin</h4>\n        {user.token && <button onClick={() => { localStorage.removeItem(\"user\"); setUser({}) }}>Logout</button>}\n      </header>\n      <div>\n        {(page == \"login\" ) && <div style={{display:\"flex\",flexDirection:\"column\"}}><h4>Login</h4>\n        <div>\n          <label for=\"email\">Email:</label>\n          <input type=\"text\" id=\"email\" name=\"email\" onChange={(e) => { setEmail(e.target.value) }} />\n          </div>\n          <div>\n          <label for=\"pass\">Password:</label>\n          <input type=\"password\" id=\"pass\" name=\"pass\" onChange={(e) => { setPass(e.target.value) }} />\n          </div>\n          <h4>{err}</h4>\n          <input type=\"button\" value=\"Submit\" onClick={() => {\n\n            fetch(backendURI + \"auth/local\", {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({ \"identifier\": email, \"password\": pass })\n            }).then((res) => { res.json().then(data => { if (data.statusCode) setErr(\"Username or Password invalid\"); else { let user1 = data.user; user1.token = data.jwt; localStorage.setItem(\"user\", JSON.stringify(user1)); setUser(user1); setPage(\"events\") } }) }, (err) => { console.log(err) });\n\n          }\n          } />\n          {/* <button onClick={() => { setPage(\"register\") }}>Register</button> */}\n        </div>}\n        {(page == \"register\" && !user.token) && <div><h4>Register</h4>\n          <label for=\"email\">Email:</label>\n          <input type=\"text\" id=\"email\" name=\"email\" onChange={(e) => { setEmail(e.target.value) }} />\n          <label for=\"email\">Username:</label>\n          <input type=\"text\" id=\"username\" name=\"username\" onChange={(e) => { setUsername(e.target.value) }} />\n          <label for=\"pass\">Password:</label>\n          <input type=\"password\" id=\"pass\" name=\"pass\" onChange={(e) => { setPass(e.target.value) }} />\n          <label for=\"pass\">Repeat Password:</label>\n          <input type=\"password\" id=\"rpass\" name=\"rpass\" onChange={(e) => { setRPass(e.target.value) }} />\n          <h4>{err}</h4>\n          <input type=\"button\" value=\"Submit\" onClick={() => {\n            if (pass === rpass)\n              fetch(backendURI + \"auth/local/register\", {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ \"username\": username, \"email\": email, \"password\": pass })\n              }).then((res) => { res.json().then(data => { if (data.statusCode) setErr(data?.data[0]?.messages[0]?.message); else setErr(\"Registered succcessfully. PLease login.\") }) }, (err) => { console.log(err) });\n            else setErr(\"password doesn't match\")\n          }} />\n          <button onClick={() => { setPage(\"login\") }}>Login</button>\n        </div>}\n        {(user.token && page == \"events\") && <div>\n          <h4> Logged in as {user.email}</h4>\n          <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n            <div style={{margin:\"auto\"}}>\n              <h4>Events</h4>\n              {categories.length && <div>\n                {getEvents(categories).map((val, idx) => {\n                  return <div style={{display:\"flex\",alignItems:\"center\", backgroundColor: val.id == currevent ? \"yellow\" : \"lightgray\",margin:\"auto\" , marginTop:\"5px\"}} onClick={() => { setcurrevent(val.id); setPage(\"insideevent\"); console.log(\"eventId\", val.id) }}>\n                    <h4>{val.name}</h4>\n                  </div>\n                })}\n\n              </div>}\n            </div>\n\n          </div>\n        </div>}\n        {(user.token && page == \"insideevent\") && <div >\n          <button style={{ marginTop: \"15px\" }} onClick={() => { setPage(\"events\") }}>Back to events</button>\n          <div style={{ display: \"flex\", flexDirection: \"row\" , justifyContent:\"center\"}}>\n            <div style={{  height: \"100vh\", overflowY: \"scroll\" }} ><h4>Registrations</h4>\n              {<h4>Total Registrations:{getTotalreg(userEvents, currevent)} </h4>}\n              {userEvents.map((val, idx) => {\n                if (val.event == currevent && val.teamMembers.length)\n                  return (<div style={{ border: \"1px solid black\", backgroundColor: idx == currUserEventId ? \"yellow\" : \"white\" , padding:\"5px\"}}>\n                    <h4> Status</h4>\n                    {val.status}\n                    <h4>teamMembers</h4>\n                    {val.teamMembers.map((val1, idx1) => { return (<div style={{ display: \"flex\", flexDirection: \"column\", flexWrap: \"wrap\", marginTop: \"10px\" }}><h5 className=\"nomargin\">{val1.name}</h5><h5 className=\"nomargin\">{val1.collegeName}</h5><h5 className=\"nomargin\">{val1.ragamID}</h5><h5 className=\"nomargin\">{val1.phoneNumber}</h5></div>) })}\n                    <h4>Metavalues</h4>\n                    {val.metaValues?.map((val2, idx) => {\n                      return (<div>\n                        {val2}\n                      </div>)\n                    })}\n                    <h4>Submissions</h4>\n                    { val.submissions.length ? val.submissions.map((val, idx) => {\n                      return (\n                        <a style={{\n                          overflow: \"hidden\",\n                          textOverflow: \"ellipsis\"\n                        }} href={backendURI.slice(0, -1) + val.url}>\n                          <h4>{val.name}</h4>\n                        </a>\n                      )\n                    }) : <h4>No submissions by this team</h4>}\n                  </div>)\n              })}\n            </div>\n          </div>\n        </div>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}